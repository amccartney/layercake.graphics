import{S as e,i as t,s as a,e as s,t as r,a as l,b as n,d as o,f as c,g as i,h,j as v,k as f,l as d,m,n as p,o as g,p as y,q as u,r as k,u as w,v as b,w as S,x as E,y as x,z as L,A as $}from"./client.4296b23d.js";import{h as q,a as A}from"./hljsDefineSvelte.546762c8.js";function C(e,t,a){const s=e.slice();return s[1]=t[a],s}function H(e,t,a){const s=e.slice();return s[1]=t[a],s}function V(e){let t,a,w,b,S,E,x,q,A,C,H,V,I,D=e[1].title+"";var P=e[1].component;return P&&(H=new P({})),{c(){t=s("div"),a=s("h4"),w=s("a"),b=r(D),E=l(),x=s("a"),q=r("Edit"),C=l(),H&&g(H.$$.fragment),V=l(),this.h()},l(e){t=n(e,"DIV",{class:!0});var s=o(t);a=n(s,"H4",{class:!0});var r=o(a);w=n(r,"A",{rel:!0,href:!0,class:!0});var l=o(w);b=c(l,D),l.forEach(i),E=h(r),x=n(r,"A",{class:!0,href:!0,target:!0,rel:!0});var v=o(x);q=c(v,"Edit"),v.forEach(i),r.forEach(i),C=h(s),H&&L(H.$$.fragment,s),V=h(s),s.forEach(i),this.h()},h(){v(w,"rel","prefetch"),v(w,"href",S="example/"+e[1].slug),v(w,"class","svelte-1qvy275"),v(x,"class","edit-repl svelte-1qvy275"),v(x,"href",A="https://svelte.dev/repl/"+e[1].replPath),v(x,"target","_blank"),v(x,"rel","nofollow"),v(a,"class","title svelte-1qvy275"),v(t,"class","gallery-item svelte-1qvy275")},m(e,s){f(e,t,s),d(t,a),d(a,w),d(w,b),d(a,E),d(a,x),d(x,q),d(t,C),H&&u(H,t,null),d(t,V),I=!0},p(e,a){if(P!==(P=e[1].component)){if(H){$();const e=H;m(e.$$.fragment,1,0,()=>{k(e,1)}),p()}P?(H=new P({}),g(H.$$.fragment),y(H.$$.fragment,1),u(H,t,V)):H=null}},i(e){I||(H&&y(H.$$.fragment,e),I=!0)},o(e){H&&m(H.$$.fragment,e),I=!1},d(e){e&&i(t),H&&k(H)}}}function I(e){let t,a,b,S,E,x,q,A,C,H,V,I,D,P=e[1].title+"";var T=e[1].component;return T&&(V=new T({})),{c(){t=s("div"),a=s("h4"),b=s("a"),S=r(P),x=l(),q=s("a"),A=r("Edit"),H=l(),V&&g(V.$$.fragment),I=l(),this.h()},l(e){t=n(e,"DIV",{class:!0});var s=o(t);a=n(s,"H4",{class:!0});var r=o(a);b=n(r,"A",{rel:!0,href:!0,class:!0});var l=o(b);S=c(l,P),l.forEach(i),x=h(r),q=n(r,"A",{class:!0,href:!0,target:!0,rel:!0});var v=o(q);A=c(v,"Edit"),v.forEach(i),r.forEach(i),H=h(s),V&&L(V.$$.fragment,s),I=h(s),s.forEach(i),this.h()},h(){v(b,"rel","prefetch"),v(b,"href",E="example-ssr/"+e[1].slug),v(b,"class","svelte-1qvy275"),v(q,"class","edit-repl svelte-1qvy275"),v(q,"href",C="https://svelte.dev/repl/"+e[1].replPath),v(q,"target","_blank"),v(q,"rel","nofollow"),v(a,"class","title svelte-1qvy275"),v(t,"class","gallery-item svelte-1qvy275"),w(t,"scaled",e[1].title.toLowerCase().includes("map"))},m(e,s){f(e,t,s),d(t,a),d(a,b),d(b,S),d(a,x),d(a,q),d(q,A),d(t,H),V&&u(V,t,null),d(t,I),D=!0},p(e,a){if(T!==(T=e[1].component)){if(V){$();const e=V;m(e.$$.fragment,1,0,()=>{k(e,1)}),p()}T?(V=new T({}),g(V.$$.fragment),y(V.$$.fragment,1),u(V,t,I)):V=null}0&a&&w(t,"scaled",e[1].title.toLowerCase().includes("map"))},i(e){D||(V&&y(V.$$.fragment,e),D=!0)},o(e){V&&m(V.$$.fragment,e),D=!1},d(e){e&&i(t),V&&k(V)}}}function D(e){let t,a,g,u,k,w,L,A,D,P,T,j,G,M,_,B,R,z,J,N,U,W,X,Y,F,K,O,Q,Z,ee,te,ae,se,re,le,ne,oe,ce,ie,he,ve,fe,de,me,pe,ge,ye,ue,ke,we,be,Se,Ee,xe,Le,$e,qe=q.highlight("svelte",e[0]).value+"",Ae=S,Ce=[];for(let t=0;t<Ae.length;t+=1)Ce[t]=V(H(e,Ae,t));const He=e=>m(Ce[e],1,1,()=>{Ce[e]=null});let Ve=E,Ie=[];for(let t=0;t<Ve.length;t+=1)Ie[t]=I(C(e,Ve,t));const De=e=>m(Ie[e],1,1,()=>{Ie[e]=null});return{c(){t=s("meta"),a=s("meta"),g=s("link"),u=l(),k=s("div"),w=s("div"),L=s("div"),A=l(),D=s("h1"),P=r("Layer Cake"),T=l(),j=s("div"),G=s("p"),M=r("Layer Cake is a graphics framework for "),_=s("a"),B=r("Svelte"),R=r(". It uses the measurements of your target div and your data extents to create scales that "),z=s("span"),J=r("stay synced"),N=r(" on layout changes. Use these scales to organize multiple, "),U=s("span"),W=r("mostly-reusable Svelte components"),X=r(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time."),Y=l(),F=s("p"),K=r("Read the "),O=s("a"),Q=r("guide"),Z=r(" or try the "),ee=s("a"),te=r("starter template"),ae=r(" that comes with example components. See the examples below and even edit them live. Here's a sample of what the code looks like:"),se=l(),re=s("div"),le=s("pre"),ne=l(),oe=s("div");for(let e=0;e<Ce.length;e+=1)Ce[e].c();ce=l(),ie=s("div"),he=s("h2"),ve=r("Server-side rendering"),fe=l(),de=s("p"),me=r("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),pe=s("a"),ge=r("viewBox"),ye=r(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),ue=s("a"),ke=r("this blog post"),we=r("."),be=l(),Se=s("p"),Ee=r("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),xe=l(),Le=s("div");for(let e=0;e<Ie.length;e+=1)Ie[e].c();this.h()},l(e){const s=b('[data-svelte="svelte-1ik47nv"]',document.head);t=n(s,"META",{name:!0,content:!0}),a=n(s,"META",{name:!0,content:!0}),g=n(s,"LINK",{rel:!0,href:!0}),s.forEach(i),u=h(e),k=n(e,"DIV",{class:!0});var r=o(k);w=n(r,"DIV",{class:!0});var l=o(w);L=n(l,"DIV",{id:!0,class:!0}),o(L).forEach(i),A=h(l),D=n(l,"H1",{class:!0});var v=o(D);P=c(v,"Layer Cake"),v.forEach(i),l.forEach(i),T=h(r),j=n(r,"DIV",{id:!0,class:!0});var f=o(j);G=n(f,"P",{class:!0});var d=o(G);M=c(d,"Layer Cake is a graphics framework for "),_=n(d,"A",{href:!0,target:!0,rel:!0,class:!0});var m=o(_);B=c(m,"Svelte"),m.forEach(i),R=c(d,". It uses the measurements of your target div and your data extents to create scales that "),z=n(d,"SPAN",{class:!0});var p=o(z);J=c(p,"stay synced"),p.forEach(i),N=c(d," on layout changes. Use these scales to organize multiple, "),U=n(d,"SPAN",{class:!0});var y=o(U);W=c(y,"mostly-reusable Svelte components"),y.forEach(i),X=c(d,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time."),d.forEach(i),Y=h(f),F=n(f,"P",{class:!0});var S=o(F);K=c(S,"Read the "),O=n(S,"A",{href:!0,rel:!0,class:!0});var E=o(O);Q=c(E,"guide"),E.forEach(i),Z=c(S," or try the "),ee=n(S,"A",{href:!0,target:!0,rel:!0,class:!0});var x=o(ee);te=c(x,"starter template"),x.forEach(i),ae=c(S," that comes with example components. See the examples below and even edit them live. Here's a sample of what the code looks like:"),S.forEach(i),f.forEach(i),se=h(r),re=n(r,"DIV",{class:!0});var $=o(re);le=n($,"PRE",{class:!0}),o(le).forEach(i),$.forEach(i),ne=h(r),oe=n(r,"DIV",{id:!0});var q=o(oe);for(let e=0;e<Ce.length;e+=1)Ce[e].l(q);q.forEach(i),ce=h(r),ie=n(r,"DIV",{class:!0});var C=o(ie);he=n(C,"H2",{});var H=o(he);ve=c(H,"Server-side rendering"),H.forEach(i),fe=h(C),de=n(C,"P",{class:!0});var V=o(de);me=c(V,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),pe=n(V,"A",{href:!0,target:!0,rel:!0,class:!0});var I=o(pe);ge=c(I,"viewBox"),I.forEach(i),ye=c(V," and CSS settings that Rich Harris, Svelte's creator, outlined in "),ue=n(V,"A",{href:!0,target:!0,rel:!0,class:!0});var $e=o(ue);ke=c($e,"this blog post"),$e.forEach(i),we=c(V,"."),V.forEach(i),be=h(C),Se=n(C,"P",{});var qe=o(Se);Ee=c(qe,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),qe.forEach(i),C.forEach(i),xe=h(r),Le=n(r,"DIV",{id:!0});var Ae=o(Le);for(let e=0;e<Ie.length;e+=1)Ie[e].l(Ae);Ae.forEach(i),r.forEach(i),this.h()},h(){document.title="Layer Cake",v(t,"name","og:title"),v(t,"content","Layer Cake"),v(a,"name","twitter:title"),v(a,"content","Layer Cake"),v(g,"rel","stylesheet"),v(g,"href","hljs.css"),v(L,"id","logo"),v(L,"class","svelte-1qvy275"),v(D,"class","svelte-1qvy275"),v(w,"class","logo-container svelte-1qvy275"),v(_,"href","https://svelte.dev"),v(_,"target","_blank"),v(_,"rel","noopener"),v(_,"class","svelte-1qvy275"),v(z,"class","strong svelte-1qvy275"),v(U,"class","strong svelte-1qvy275"),v(G,"class","svelte-1qvy275"),v(O,"href","guide"),v(O,"rel","prefetch"),v(O,"class","svelte-1qvy275"),v(ee,"href","https://github.com/mhkeller/layercake-template"),v(ee,"target","_blank"),v(ee,"rel","nofollow"),v(ee,"class","svelte-1qvy275"),v(F,"class","svelte-1qvy275"),v(j,"id","dek"),v(j,"class","svelte-1qvy275"),v(le,"class","svelte-1qvy275"),v(re,"class","code-example svelte-1qvy275"),v(oe,"id","gallery"),v(pe,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),v(pe,"target","_blank"),v(pe,"rel","nofollow"),v(pe,"class","svelte-1qvy275"),v(ue,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),v(ue,"target","_blank"),v(ue,"rel","nofollow"),v(ue,"class","svelte-1qvy275"),v(de,"class","svelte-1qvy275"),v(ie,"class","section-hed"),v(Le,"id","ssr-gallery"),v(k,"class","main svelte-1qvy275")},m(e,s){d(document.head,t),d(document.head,a),d(document.head,g),f(e,u,s),f(e,k,s),d(k,w),d(w,L),d(w,A),d(w,D),d(D,P),d(k,T),d(k,j),d(j,G),d(G,M),d(G,_),d(_,B),d(G,R),d(G,z),d(z,J),d(G,N),d(G,U),d(U,W),d(G,X),d(j,Y),d(j,F),d(F,K),d(F,O),d(O,Q),d(F,Z),d(F,ee),d(ee,te),d(F,ae),d(k,se),d(k,re),d(re,le),le.innerHTML=qe,d(k,ne),d(k,oe);for(let e=0;e<Ce.length;e+=1)Ce[e].m(oe,null);d(k,ce),d(k,ie),d(ie,he),d(he,ve),d(ie,fe),d(ie,de),d(de,me),d(de,pe),d(pe,ge),d(de,ye),d(de,ue),d(ue,ke),d(de,we),d(ie,be),d(ie,Se),d(Se,Ee),d(k,xe),d(k,Le);for(let e=0;e<Ie.length;e+=1)Ie[e].m(Le,null);$e=!0},p(e,[t]){if(0&t){let a;for(Ae=S,a=0;a<Ae.length;a+=1){const s=H(e,Ae,a);Ce[a]?(Ce[a].p(s,t),y(Ce[a],1)):(Ce[a]=V(s),Ce[a].c(),y(Ce[a],1),Ce[a].m(oe,null))}for($(),a=Ae.length;a<Ce.length;a+=1)He(a);p()}if(0&t){let a;for(Ve=E,a=0;a<Ve.length;a+=1){const s=C(e,Ve,a);Ie[a]?(Ie[a].p(s,t),y(Ie[a],1)):(Ie[a]=I(s),Ie[a].c(),y(Ie[a],1),Ie[a].m(Le,null))}for($(),a=Ve.length;a<Ie.length;a+=1)De(a);p()}},i(e){if(!$e){for(let e=0;e<Ae.length;e+=1)y(Ce[e]);for(let e=0;e<Ve.length;e+=1)y(Ie[e]);$e=!0}},o(e){Ce=Ce.filter(Boolean);for(let e=0;e<Ce.length;e+=1)m(Ce[e]);Ie=Ie.filter(Boolean);for(let e=0;e<Ie.length;e+=1)m(Ie[e]);$e=!1},d(e){i(t),i(a),i(g),e&&i(u),e&&i(k),x(Ce,e),x(Ie,e)}}}function P(e){q.registerLanguage("svelte",A),A(q);return["<script>\n\timport { LayerCake, Svg, Html, Canvas } from 'layercake';\n\n\timport AxisX from './components/AxisX.svelte';\n\timport AxisY from './components/AxisY.svelte';\n\timport Line from './components/Line.svelte';\n\timport Scatter from './components/Scatter.svelte';\n\timport Labels from './components/Labels.svelte';\n\n\tconst data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];\n<\/script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 500px;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tx='x'\n\t\ty='y'\n\t\t{data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX/>\n\t\t\t<AxisY/>\n\t\t\t<Line color='#f0c'/>\n\t\t</Svg>\n\n\t\t<Canvas>\n\t\t\t<Scatter color='#0fc'/>\n\t\t</Canvas>\n\n\t\t<Html>\n\t\t\t<Labels/>\n\t\t</Html>\n\t</LayerCake>\n</div>".trim().replace(/\t/g,"  ")]}export default class extends e{constructor(e){super(),t(this,e,P,D,a,{})}}
