import{S as e,i as t,s as a,e as s,t as r,a as l,b as n,d as o,f as c,g as i,h,j as v,k as f,l as m,m as d,n as p,o as g,p as y,q as u,r as k,u as w,v as E,w as S,x as b,y as x,z as L,A as $}from"./client.0dcb6f20.js";import{h as q,a as C}from"./hljsDefineSvelte.e2570678.js";function A(e,t,a){const s=e.slice();return s[1]=t[a],s}function H(e,t,a){const s=e.slice();return s[1]=t[a],s}function V(e){let t,a,E,S,b,x,L,q,C,A,H,V,I=e[1].title+"";var D=e[1].component;if(D)var P=new D({});return{c(){t=s("div"),a=s("h4"),E=s("a"),S=r(I),x=l(),L=s("a"),q=r("Edit"),A=l(),P&&n(P.$$.fragment),H=l(),this.h()},l(e){t=o(e,"DIV",{class:!0});var s=c(t);a=o(s,"H4",{class:!0});var r=c(a);E=o(r,"A",{rel:!0,href:!0,class:!0});var l=c(E);S=i(l,I),l.forEach(h),x=v(r),L=o(r,"A",{class:!0,href:!0,target:!0,rel:!0});var n=c(L);q=i(n,"Edit"),n.forEach(h),r.forEach(h),A=v(s),P&&f(P.$$.fragment,s),H=v(s),s.forEach(h),this.h()},h(){m(E,"rel","prefetch"),m(E,"href",b="example/"+e[1].slug),m(E,"class","svelte-1qvy275"),m(L,"class","edit-repl svelte-1qvy275"),m(L,"href",C="https://svelte.dev/repl/"+e[1].replPath),m(L,"target","_blank"),m(L,"rel","nofollow"),m(a,"class","title svelte-1qvy275"),m(t,"class","gallery-item svelte-1qvy275")},m(e,s){d(e,t,s),p(t,a),p(a,E),p(E,S),p(a,x),p(a,L),p(L,q),p(t,A),P&&g(P,t,null),p(t,H),V=!0},p(e,a){if(D!==(D=e[1].component)){if(P){$();const e=P;y(e.$$.fragment,1,0,()=>{w(e,1)}),u()}D?(P=new D({}),n(P.$$.fragment),k(P.$$.fragment,1),g(P,t,H)):P=null}},i(e){V||(P&&k(P.$$.fragment,e),V=!0)},o(e){P&&y(P.$$.fragment,e),V=!1},d(e){e&&h(t),P&&w(P)}}}function I(e){let t,a,S,b,x,L,q,C,A,H,V,I,D=e[1].title+"";var P=e[1].component;if(P)var G=new P({});return{c(){t=s("div"),a=s("h4"),S=s("a"),b=r(D),L=l(),q=s("a"),C=r("Edit"),H=l(),G&&n(G.$$.fragment),V=l(),this.h()},l(e){t=o(e,"DIV",{class:!0});var s=c(t);a=o(s,"H4",{class:!0});var r=c(a);S=o(r,"A",{rel:!0,href:!0,class:!0});var l=c(S);b=i(l,D),l.forEach(h),L=v(r),q=o(r,"A",{class:!0,href:!0,target:!0,rel:!0});var n=c(q);C=i(n,"Edit"),n.forEach(h),r.forEach(h),H=v(s),G&&f(G.$$.fragment,s),V=v(s),s.forEach(h),this.h()},h(){m(S,"rel","prefetch"),m(S,"href",x="example-ssr/"+e[1].slug),m(S,"class","svelte-1qvy275"),m(q,"class","edit-repl svelte-1qvy275"),m(q,"href",A="https://svelte.dev/repl/"+e[1].replPath),m(q,"target","_blank"),m(q,"rel","nofollow"),m(a,"class","title svelte-1qvy275"),m(t,"class","gallery-item svelte-1qvy275"),E(t,"scaled",e[1].title.toLowerCase().includes("map"))},m(e,s){d(e,t,s),p(t,a),p(a,S),p(S,b),p(a,L),p(a,q),p(q,C),p(t,H),G&&g(G,t,null),p(t,V),I=!0},p(e,a){if(P!==(P=e[1].component)){if(G){$();const e=G;y(e.$$.fragment,1,0,()=>{w(e,1)}),u()}P?(G=new P({}),n(G.$$.fragment),k(G.$$.fragment,1),g(G,t,V)):G=null}0&a&&E(t,"scaled",e[1].title.toLowerCase().includes("map"))},i(e){I||(G&&k(G.$$.fragment,e),I=!0)},o(e){G&&y(G.$$.fragment,e),I=!1},d(e){e&&h(t),G&&w(G)}}}function D(e){let t,a,n,f,g,w,E,C,D,P,G,M,T,j,_,B,R,z,J,N,U,W,X,Y,F,K,O,Q,Z,ee,te,ae,se,re,le,ne,oe,ce,ie,he,ve,fe,me,de,pe,ge,ye,ue,ke,we,Ee,Se,be,xe,Le,$e,qe=q.highlight("svelte",e[0]).value+"",Ce=b,Ae=[];for(let t=0;t<Ce.length;t+=1)Ae[t]=V(H(e,Ce,t));const He=e=>y(Ae[e],1,1,()=>{Ae[e]=null});let Ve=x,Ie=[];for(let t=0;t<Ve.length;t+=1)Ie[t]=I(A(e,Ve,t));const De=e=>y(Ie[e],1,1,()=>{Ie[e]=null});return{c(){t=s("meta"),a=s("meta"),n=s("link"),f=l(),g=s("div"),w=s("div"),E=s("div"),C=l(),D=s("h1"),P=r("Layer Cake"),G=l(),M=s("div"),T=s("p"),j=r("Layer Cake is a graphics framework for "),_=s("a"),B=r("Svelte"),R=r(". It uses the measurements of your target div and your data extents to create scales that "),z=s("span"),J=r("stay synced"),N=r(" on layout changes. Use these scales to organize multiple, "),U=s("span"),W=r("mostly-reusable Svelte components"),X=r(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time."),Y=l(),F=s("p"),K=r("Read the "),O=s("a"),Q=r("guide"),Z=r(" or try the "),ee=s("a"),te=r("starter template"),ae=r(" that comes with example components. See the examples below and even edit them live. Here's a sample of what the code looks like:"),se=l(),re=s("div"),le=s("pre"),ne=l(),oe=s("div");for(let e=0;e<Ae.length;e+=1)Ae[e].c();ce=l(),ie=s("div"),he=s("h2"),ve=r("Server-side rendering examples"),fe=l(),me=s("p"),de=r("Layer Cake has built-in helpers to render your charts server-side without any client-side JavaScript, meaning they appear as soon as the page loads and you avoid flashes of large blank spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),pe=s("a"),ge=r("viewBox"),ye=r(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),ue=s("a"),ke=r("this blog post"),we=r("."),Ee=l(),Se=s("p"),be=r("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),xe=l(),Le=s("div");for(let e=0;e<Ie.length;e+=1)Ie[e].c();this.h()},l(e){const s=S('[data-svelte="svelte-1ik47nv"]',document.head);t=o(s,"META",{name:!0,content:!0}),a=o(s,"META",{name:!0,content:!0}),n=o(s,"LINK",{rel:!0,href:!0}),s.forEach(h),f=v(e),g=o(e,"DIV",{class:!0});var r=c(g);w=o(r,"DIV",{class:!0});var l=c(w);E=o(l,"DIV",{id:!0,class:!0}),c(E).forEach(h),C=v(l),D=o(l,"H1",{class:!0});var m=c(D);P=i(m,"Layer Cake"),m.forEach(h),l.forEach(h),G=v(r),M=o(r,"DIV",{id:!0,class:!0});var d=c(M);T=o(d,"P",{class:!0});var p=c(T);j=i(p,"Layer Cake is a graphics framework for "),_=o(p,"A",{href:!0,target:!0,rel:!0,class:!0});var y=c(_);B=i(y,"Svelte"),y.forEach(h),R=i(p,". It uses the measurements of your target div and your data extents to create scales that "),z=o(p,"SPAN",{class:!0});var u=c(z);J=i(u,"stay synced"),u.forEach(h),N=i(p," on layout changes. Use these scales to organize multiple, "),U=o(p,"SPAN",{class:!0});var k=c(U);W=i(k,"mostly-reusable Svelte components"),k.forEach(h),X=i(p,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time."),p.forEach(h),Y=v(d),F=o(d,"P",{class:!0});var b=c(F);K=i(b,"Read the "),O=o(b,"A",{href:!0,rel:!0,class:!0});var x=c(O);Q=i(x,"guide"),x.forEach(h),Z=i(b," or try the "),ee=o(b,"A",{href:!0,target:!0,rel:!0,class:!0});var L=c(ee);te=i(L,"starter template"),L.forEach(h),ae=i(b," that comes with example components. See the examples below and even edit them live. Here's a sample of what the code looks like:"),b.forEach(h),d.forEach(h),se=v(r),re=o(r,"DIV",{class:!0});var $=c(re);le=o($,"PRE",{class:!0}),c(le).forEach(h),$.forEach(h),ne=v(r),oe=o(r,"DIV",{id:!0});var q=c(oe);for(let e=0;e<Ae.length;e+=1)Ae[e].l(q);q.forEach(h),ce=v(r),ie=o(r,"DIV",{class:!0});var A=c(ie);he=o(A,"H2",{});var H=c(he);ve=i(H,"Server-side rendering examples"),H.forEach(h),fe=v(A),me=o(A,"P",{class:!0});var V=c(me);de=i(V,"Layer Cake has built-in helpers to render your charts server-side without any client-side JavaScript, meaning they appear as soon as the page loads and you avoid flashes of large blank spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),pe=o(V,"A",{href:!0,target:!0,rel:!0,class:!0});var I=c(pe);ge=i(I,"viewBox"),I.forEach(h),ye=i(V," and CSS settings that Rich Harris, Svelte's creator, outlined in "),ue=o(V,"A",{href:!0,target:!0,rel:!0,class:!0});var $e=c(ue);ke=i($e,"this blog post"),$e.forEach(h),we=i(V,"."),V.forEach(h),Ee=v(A),Se=o(A,"P",{});var qe=c(Se);be=i(qe,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),qe.forEach(h),A.forEach(h),xe=v(r),Le=o(r,"DIV",{id:!0});var Ce=c(Le);for(let e=0;e<Ie.length;e+=1)Ie[e].l(Ce);Ce.forEach(h),r.forEach(h),this.h()},h(){document.title="Layer Cake",m(t,"name","og:title"),m(t,"content","Layer Cake"),m(a,"name","twitter:title"),m(a,"content","Layer Cake"),m(n,"rel","stylesheet"),m(n,"href","hljs.css"),m(E,"id","logo"),m(E,"class","svelte-1qvy275"),m(D,"class","svelte-1qvy275"),m(w,"class","logo-container svelte-1qvy275"),m(_,"href","https://svelte.dev"),m(_,"target","_blank"),m(_,"rel","noopener"),m(_,"class","svelte-1qvy275"),m(z,"class","strong svelte-1qvy275"),m(U,"class","strong svelte-1qvy275"),m(T,"class","svelte-1qvy275"),m(O,"href","guide"),m(O,"rel","prefetch"),m(O,"class","svelte-1qvy275"),m(ee,"href","https://github.com/mhkeller/layercake-template"),m(ee,"target","_blank"),m(ee,"rel","nofollow"),m(ee,"class","svelte-1qvy275"),m(F,"class","svelte-1qvy275"),m(M,"id","dek"),m(M,"class","svelte-1qvy275"),m(le,"class","svelte-1qvy275"),m(re,"class","code-example svelte-1qvy275"),m(oe,"id","gallery"),m(pe,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),m(pe,"target","_blank"),m(pe,"rel","nofollow"),m(pe,"class","svelte-1qvy275"),m(ue,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),m(ue,"target","_blank"),m(ue,"rel","nofollow"),m(ue,"class","svelte-1qvy275"),m(me,"class","svelte-1qvy275"),m(ie,"class","section-hed"),m(Le,"id","ssr-gallery"),m(g,"class","main svelte-1qvy275")},m(e,s){p(document.head,t),p(document.head,a),p(document.head,n),d(e,f,s),d(e,g,s),p(g,w),p(w,E),p(w,C),p(w,D),p(D,P),p(g,G),p(g,M),p(M,T),p(T,j),p(T,_),p(_,B),p(T,R),p(T,z),p(z,J),p(T,N),p(T,U),p(U,W),p(T,X),p(M,Y),p(M,F),p(F,K),p(F,O),p(O,Q),p(F,Z),p(F,ee),p(ee,te),p(F,ae),p(g,se),p(g,re),p(re,le),le.innerHTML=qe,p(g,ne),p(g,oe);for(let e=0;e<Ae.length;e+=1)Ae[e].m(oe,null);p(g,ce),p(g,ie),p(ie,he),p(he,ve),p(ie,fe),p(ie,me),p(me,de),p(me,pe),p(pe,ge),p(me,ye),p(me,ue),p(ue,ke),p(me,we),p(ie,Ee),p(ie,Se),p(Se,be),p(g,xe),p(g,Le);for(let e=0;e<Ie.length;e+=1)Ie[e].m(Le,null);$e=!0},p(e,[t]){if(0&t){let a;for(Ce=b,a=0;a<Ce.length;a+=1){const s=H(e,Ce,a);Ae[a]?(Ae[a].p(s,t),k(Ae[a],1)):(Ae[a]=V(s),Ae[a].c(),k(Ae[a],1),Ae[a].m(oe,null))}for($(),a=Ce.length;a<Ae.length;a+=1)He(a);u()}if(0&t){let a;for(Ve=x,a=0;a<Ve.length;a+=1){const s=A(e,Ve,a);Ie[a]?(Ie[a].p(s,t),k(Ie[a],1)):(Ie[a]=I(s),Ie[a].c(),k(Ie[a],1),Ie[a].m(Le,null))}for($(),a=Ve.length;a<Ie.length;a+=1)De(a);u()}},i(e){if(!$e){for(let e=0;e<Ce.length;e+=1)k(Ae[e]);for(let e=0;e<Ve.length;e+=1)k(Ie[e]);$e=!0}},o(e){Ae=Ae.filter(Boolean);for(let e=0;e<Ae.length;e+=1)y(Ae[e]);Ie=Ie.filter(Boolean);for(let e=0;e<Ie.length;e+=1)y(Ie[e]);$e=!1},d(e){h(t),h(a),h(n),e&&h(f),e&&h(g),L(Ae,e),L(Ie,e)}}}function P(e){return q.registerLanguage("svelte",C),C(q),["<script>\n\timport { LayerCake, Svg, Html, Canvas } from 'layercake';\n\n\timport AxisX from './components/AxisX.svelte';\n\timport AxisY from './components/AxisY.svelte';\n\timport Line from './components/Line.svelte';\n\timport Scatter from './components/Scatter.svelte';\n\timport Labels from './components/Labels.svelte';\n\n\tconst data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];\n<\/script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 500px;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tx='x'\n\t\ty='y'\n\t\t{data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX/>\n\t\t\t<AxisY/>\n\t\t\t<Line color='#f0c'/>\n\t\t</Svg>\n\n\t\t<Canvas>\n\t\t\t<Scatter color='#0fc'/>\n\t\t</Canvas>\n\n\t\t<Html>\n\t\t\t<Labels/>\n\t\t</Html>\n\t</LayerCake>\n</div>".trim().replace(/\t/g,"  ")]}export default class extends e{constructor(e){super(),t(this,e,P,D,a,{})}}
