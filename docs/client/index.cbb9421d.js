import{S as e,i as t,s as a,e as s,t as r,a as l,b as n,d as o,f as c,g as i,h,j as v,k as f,l as m,m as d,n as p,o as g,p as y,q as u,r as k,u as w,v as E,w as S,x as b,y as x,z as L,A as $}from"./client.e24108a7.js";import{h as q,a as C}from"./hljsDefineSvelte.043442a3.js";function A(e,t,a){const s=e.slice();return s[1]=t[a],s}function H(e,t,a){const s=e.slice();return s[1]=t[a],s}function V(e){let t,a,w,E,S,b,x,q,C,A,H,V,I,D=e[1].title+"";var P=e[1].component;return P&&(H=new P({})),{c(){t=s("div"),a=s("h4"),w=s("a"),E=r(D),b=l(),x=s("a"),q=r("Edit"),A=l(),H&&g(H.$$.fragment),V=l(),this.h()},l(e){t=n(e,"DIV",{class:!0});var s=o(t);a=n(s,"H4",{class:!0});var r=o(a);w=n(r,"A",{rel:!0,href:!0,class:!0});var l=o(w);E=c(l,D),l.forEach(i),b=h(r),x=n(r,"A",{class:!0,href:!0,target:!0,rel:!0});var v=o(x);q=c(v,"Edit"),v.forEach(i),r.forEach(i),A=h(s),H&&L(H.$$.fragment,s),V=h(s),s.forEach(i),this.h()},h(){v(w,"rel","prefetch"),v(w,"href",S="example/"+e[1].slug),v(w,"class","svelte-1qvy275"),v(x,"class","edit-repl svelte-1qvy275"),v(x,"href",C="https://svelte.dev/repl/"+e[1].replPath),v(x,"target","_blank"),v(x,"rel","nofollow"),v(a,"class","title svelte-1qvy275"),v(t,"class","gallery-item svelte-1qvy275")},m(e,s){f(e,t,s),m(t,a),m(a,w),m(w,E),m(a,b),m(a,x),m(x,q),m(t,A),H&&u(H,t,null),m(t,V),I=!0},p(e,a){if(P!==(P=e[1].component)){if(H){$();const e=H;d(e.$$.fragment,1,0,()=>{k(e,1)}),p()}P?(H=new P({}),g(H.$$.fragment),y(H.$$.fragment,1),u(H,t,V)):H=null}},i(e){I||(H&&y(H.$$.fragment,e),I=!0)},o(e){H&&d(H.$$.fragment,e),I=!1},d(e){e&&i(t),H&&k(H)}}}function I(e){let t,a,E,S,b,x,q,C,A,H,V,I,D,P=e[1].title+"";var G=e[1].component;return G&&(V=new G({})),{c(){t=s("div"),a=s("h4"),E=s("a"),S=r(P),x=l(),q=s("a"),C=r("Edit"),H=l(),V&&g(V.$$.fragment),I=l(),this.h()},l(e){t=n(e,"DIV",{class:!0});var s=o(t);a=n(s,"H4",{class:!0});var r=o(a);E=n(r,"A",{rel:!0,href:!0,class:!0});var l=o(E);S=c(l,P),l.forEach(i),x=h(r),q=n(r,"A",{class:!0,href:!0,target:!0,rel:!0});var v=o(q);C=c(v,"Edit"),v.forEach(i),r.forEach(i),H=h(s),V&&L(V.$$.fragment,s),I=h(s),s.forEach(i),this.h()},h(){v(E,"rel","prefetch"),v(E,"href",b="example-ssr/"+e[1].slug),v(E,"class","svelte-1qvy275"),v(q,"class","edit-repl svelte-1qvy275"),v(q,"href",A="https://svelte.dev/repl/"+e[1].replPath),v(q,"target","_blank"),v(q,"rel","nofollow"),v(a,"class","title svelte-1qvy275"),v(t,"class","gallery-item svelte-1qvy275"),w(t,"scaled",e[1].title.toLowerCase().includes("map"))},m(e,s){f(e,t,s),m(t,a),m(a,E),m(E,S),m(a,x),m(a,q),m(q,C),m(t,H),V&&u(V,t,null),m(t,I),D=!0},p(e,a){if(G!==(G=e[1].component)){if(V){$();const e=V;d(e.$$.fragment,1,0,()=>{k(e,1)}),p()}G?(V=new G({}),g(V.$$.fragment),y(V.$$.fragment,1),u(V,t,I)):V=null}0&a&&w(t,"scaled",e[1].title.toLowerCase().includes("map"))},i(e){D||(V&&y(V.$$.fragment,e),D=!0)},o(e){V&&d(V.$$.fragment,e),D=!1},d(e){e&&i(t),V&&k(V)}}}function D(e){let t,a,g,u,k,w,L,C,D,P,G,M,T,j,_,B,R,z,J,N,U,W,X,Y,F,K,O,Q,Z,ee,te,ae,se,re,le,ne,oe,ce,ie,he,ve,fe,me,de,pe,ge,ye,ue,ke,we,Ee,Se,be,xe,Le,$e,qe=q.highlight("svelte",e[0]).value+"",Ce=S,Ae=[];for(let t=0;t<Ce.length;t+=1)Ae[t]=V(H(e,Ce,t));const He=e=>d(Ae[e],1,1,()=>{Ae[e]=null});let Ve=b,Ie=[];for(let t=0;t<Ve.length;t+=1)Ie[t]=I(A(e,Ve,t));const De=e=>d(Ie[e],1,1,()=>{Ie[e]=null});return{c(){t=s("meta"),a=s("meta"),g=s("link"),u=l(),k=s("div"),w=s("div"),L=s("div"),C=l(),D=s("h1"),P=r("Layer Cake"),G=l(),M=s("div"),T=s("p"),j=r("Layer Cake is a graphics framework for "),_=s("a"),B=r("Svelte"),R=r(". It uses the measurements of your target div and your data extents to create scales that "),z=s("span"),J=r("stay synced"),N=r(" on layout changes. Use these scales to organize multiple, "),U=s("span"),W=r("mostly-reusable Svelte components"),X=r(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time."),Y=l(),F=s("p"),K=r("Read the "),O=s("a"),Q=r("guide"),Z=r(" or try the "),ee=s("a"),te=r("starter template"),ae=r(" that comes with example components. See the examples below and even edit them live. Here's a sample of what the code looks like:"),se=l(),re=s("div"),le=s("pre"),ne=l(),oe=s("div");for(let e=0;e<Ae.length;e+=1)Ae[e].c();ce=l(),ie=s("div"),he=s("h2"),ve=r("Server-side rendering examples"),fe=l(),me=s("p"),de=r("Layer Cake has built-in helpers to render your charts server-side without any client-side JavaScript, meaning they appear as soon as the page loads and you avoid flashes of large blank spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),pe=s("a"),ge=r("viewBox"),ye=r(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),ue=s("a"),ke=r("this blog post"),we=r("."),Ee=l(),Se=s("p"),be=r("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),xe=l(),Le=s("div");for(let e=0;e<Ie.length;e+=1)Ie[e].c();this.h()},l(e){const s=E('[data-svelte="svelte-1ik47nv"]',document.head);t=n(s,"META",{name:!0,content:!0}),a=n(s,"META",{name:!0,content:!0}),g=n(s,"LINK",{rel:!0,href:!0}),s.forEach(i),u=h(e),k=n(e,"DIV",{class:!0});var r=o(k);w=n(r,"DIV",{class:!0});var l=o(w);L=n(l,"DIV",{id:!0,class:!0}),o(L).forEach(i),C=h(l),D=n(l,"H1",{class:!0});var v=o(D);P=c(v,"Layer Cake"),v.forEach(i),l.forEach(i),G=h(r),M=n(r,"DIV",{id:!0,class:!0});var f=o(M);T=n(f,"P",{class:!0});var m=o(T);j=c(m,"Layer Cake is a graphics framework for "),_=n(m,"A",{href:!0,target:!0,rel:!0,class:!0});var d=o(_);B=c(d,"Svelte"),d.forEach(i),R=c(m,". It uses the measurements of your target div and your data extents to create scales that "),z=n(m,"SPAN",{class:!0});var p=o(z);J=c(p,"stay synced"),p.forEach(i),N=c(m," on layout changes. Use these scales to organize multiple, "),U=n(m,"SPAN",{class:!0});var y=o(U);W=c(y,"mostly-reusable Svelte components"),y.forEach(i),X=c(m,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time."),m.forEach(i),Y=h(f),F=n(f,"P",{class:!0});var S=o(F);K=c(S,"Read the "),O=n(S,"A",{href:!0,rel:!0,class:!0});var b=o(O);Q=c(b,"guide"),b.forEach(i),Z=c(S," or try the "),ee=n(S,"A",{href:!0,target:!0,rel:!0,class:!0});var x=o(ee);te=c(x,"starter template"),x.forEach(i),ae=c(S," that comes with example components. See the examples below and even edit them live. Here's a sample of what the code looks like:"),S.forEach(i),f.forEach(i),se=h(r),re=n(r,"DIV",{class:!0});var $=o(re);le=n($,"PRE",{class:!0}),o(le).forEach(i),$.forEach(i),ne=h(r),oe=n(r,"DIV",{id:!0});var q=o(oe);for(let e=0;e<Ae.length;e+=1)Ae[e].l(q);q.forEach(i),ce=h(r),ie=n(r,"DIV",{class:!0});var A=o(ie);he=n(A,"H2",{});var H=o(he);ve=c(H,"Server-side rendering examples"),H.forEach(i),fe=h(A),me=n(A,"P",{class:!0});var V=o(me);de=c(V,"Layer Cake has built-in helpers to render your charts server-side without any client-side JavaScript, meaning they appear as soon as the page loads and you avoid flashes of large blank spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),pe=n(V,"A",{href:!0,target:!0,rel:!0,class:!0});var I=o(pe);ge=c(I,"viewBox"),I.forEach(i),ye=c(V," and CSS settings that Rich Harris, Svelte's creator, outlined in "),ue=n(V,"A",{href:!0,target:!0,rel:!0,class:!0});var $e=o(ue);ke=c($e,"this blog post"),$e.forEach(i),we=c(V,"."),V.forEach(i),Ee=h(A),Se=n(A,"P",{});var qe=o(Se);be=c(qe,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),qe.forEach(i),A.forEach(i),xe=h(r),Le=n(r,"DIV",{id:!0});var Ce=o(Le);for(let e=0;e<Ie.length;e+=1)Ie[e].l(Ce);Ce.forEach(i),r.forEach(i),this.h()},h(){document.title="Layer Cake",v(t,"name","og:title"),v(t,"content","Layer Cake"),v(a,"name","twitter:title"),v(a,"content","Layer Cake"),v(g,"rel","stylesheet"),v(g,"href","hljs.css"),v(L,"id","logo"),v(L,"class","svelte-1qvy275"),v(D,"class","svelte-1qvy275"),v(w,"class","logo-container svelte-1qvy275"),v(_,"href","https://svelte.dev"),v(_,"target","_blank"),v(_,"rel","noopener"),v(_,"class","svelte-1qvy275"),v(z,"class","strong svelte-1qvy275"),v(U,"class","strong svelte-1qvy275"),v(T,"class","svelte-1qvy275"),v(O,"href","guide"),v(O,"rel","prefetch"),v(O,"class","svelte-1qvy275"),v(ee,"href","https://github.com/mhkeller/layercake-template"),v(ee,"target","_blank"),v(ee,"rel","nofollow"),v(ee,"class","svelte-1qvy275"),v(F,"class","svelte-1qvy275"),v(M,"id","dek"),v(M,"class","svelte-1qvy275"),v(le,"class","svelte-1qvy275"),v(re,"class","code-example svelte-1qvy275"),v(oe,"id","gallery"),v(pe,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),v(pe,"target","_blank"),v(pe,"rel","nofollow"),v(pe,"class","svelte-1qvy275"),v(ue,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),v(ue,"target","_blank"),v(ue,"rel","nofollow"),v(ue,"class","svelte-1qvy275"),v(me,"class","svelte-1qvy275"),v(ie,"class","section-hed"),v(Le,"id","ssr-gallery"),v(k,"class","main svelte-1qvy275")},m(e,s){m(document.head,t),m(document.head,a),m(document.head,g),f(e,u,s),f(e,k,s),m(k,w),m(w,L),m(w,C),m(w,D),m(D,P),m(k,G),m(k,M),m(M,T),m(T,j),m(T,_),m(_,B),m(T,R),m(T,z),m(z,J),m(T,N),m(T,U),m(U,W),m(T,X),m(M,Y),m(M,F),m(F,K),m(F,O),m(O,Q),m(F,Z),m(F,ee),m(ee,te),m(F,ae),m(k,se),m(k,re),m(re,le),le.innerHTML=qe,m(k,ne),m(k,oe);for(let e=0;e<Ae.length;e+=1)Ae[e].m(oe,null);m(k,ce),m(k,ie),m(ie,he),m(he,ve),m(ie,fe),m(ie,me),m(me,de),m(me,pe),m(pe,ge),m(me,ye),m(me,ue),m(ue,ke),m(me,we),m(ie,Ee),m(ie,Se),m(Se,be),m(k,xe),m(k,Le);for(let e=0;e<Ie.length;e+=1)Ie[e].m(Le,null);$e=!0},p(e,[t]){if(0&t){let a;for(Ce=S,a=0;a<Ce.length;a+=1){const s=H(e,Ce,a);Ae[a]?(Ae[a].p(s,t),y(Ae[a],1)):(Ae[a]=V(s),Ae[a].c(),y(Ae[a],1),Ae[a].m(oe,null))}for($(),a=Ce.length;a<Ae.length;a+=1)He(a);p()}if(0&t){let a;for(Ve=b,a=0;a<Ve.length;a+=1){const s=A(e,Ve,a);Ie[a]?(Ie[a].p(s,t),y(Ie[a],1)):(Ie[a]=I(s),Ie[a].c(),y(Ie[a],1),Ie[a].m(Le,null))}for($(),a=Ve.length;a<Ie.length;a+=1)De(a);p()}},i(e){if(!$e){for(let e=0;e<Ce.length;e+=1)y(Ae[e]);for(let e=0;e<Ve.length;e+=1)y(Ie[e]);$e=!0}},o(e){Ae=Ae.filter(Boolean);for(let e=0;e<Ae.length;e+=1)d(Ae[e]);Ie=Ie.filter(Boolean);for(let e=0;e<Ie.length;e+=1)d(Ie[e]);$e=!1},d(e){i(t),i(a),i(g),e&&i(u),e&&i(k),x(Ae,e),x(Ie,e)}}}function P(e){q.registerLanguage("svelte",C),C(q);return["<script>\n\timport { LayerCake, Svg, Html, Canvas } from 'layercake';\n\n\timport AxisX from './components/AxisX.svelte';\n\timport AxisY from './components/AxisY.svelte';\n\timport Line from './components/Line.svelte';\n\timport Scatter from './components/Scatter.svelte';\n\timport Labels from './components/Labels.svelte';\n\n\tconst data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];\n<\/script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 500px;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tx='x'\n\t\ty='y'\n\t\t{data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX/>\n\t\t\t<AxisY/>\n\t\t\t<Line color='#f0c'/>\n\t\t</Svg>\n\n\t\t<Canvas>\n\t\t\t<Scatter color='#0fc'/>\n\t\t</Canvas>\n\n\t\t<Html>\n\t\t\t<Labels/>\n\t\t</Html>\n\t</LayerCake>\n</div>".trim().replace(/\t/g,"  ")]}export default class extends e{constructor(e){super(),t(this,e,P,D,a,{})}}
