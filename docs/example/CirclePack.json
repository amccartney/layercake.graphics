{"main":{"title":"index.svelte","contents":"<script>\n  import { LayerCake, Html } from 'layercake';\n\n  import CirclePack from './components/CirclePack.html.svelte';\n\n  import data from './data/fruitGroups.csv';\n\n  const idKey = 'fruit';\n  const valueKey = 'value';\n\n  data.forEach(d => {\n    d[valueKey] = +d[valueKey];\n  });\n</script>\n\n<style>\n  .chart-container {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<div class=\"chart-container\">\n  <LayerCake\n    padding={{ top: 0, bottom: 20, left: 30 }}\n    data={data}\n  >\n    <Html>\n      <CirclePack\n        idKey={idKey}\n        valueKey={valueKey}\n      />\n    </Html>\n  </LayerCake>\n</div>"},"dek":"","components":[{"title":"./components/CirclePack.html.svelte","contents":"<script>\n  import { stratify, pack, hierarchy } from 'd3-hierarchy'\n  import { getContext } from 'svelte';\n\n  const { width, height, data } = getContext('LayerCake');\n\n  // export let name = '';\n  export let idKey = 'id';\n  export let parentKey = undefined;\n  export let valueKey = 'value';\n  export let labelVisibilityThreshold = 25;\n  export let fill = '#ff00cc50';\n  export let stroke = '#f0c';\n\n  export let circlePadding = 0;\n\n  /* --------------------------------------------\n   * This component will automatically group your data\n   * into one group if no `parentKey` was passed in.\n   * Stash $data here so we can add our own parent\n   * if there's no `parentKey`\n   */\n  let parent = {};\n  let dataset = $data;\n\n  $: if (parentKey === undefined) {\n    parent = { [idKey]: 'all' };\n    dataset = [...dataset, parent]\n  }\n\n  $: stratifier = stratify()\n    .id(d => d[idKey])\n    .parentId(d => {\n      if (d[idKey] === parent[idKey]) return '';\n      return d[parentKey] || parent[idKey];\n    });\n\n  $: packer = pack()\n    .size([$width, $height])\n    .padding(circlePadding);\n\n  $: stratified = stratifier(dataset);\n\n  $: root = hierarchy(stratified)\n    .sum((d, i) => {\n      return d.data[valueKey];\n    })\n    .sort((a, b) => b.value - a.value );\n\n  $: packed = packer(root);\n\n  $: descendants = packed.descendants();\n\n  const titleCase = d => d.replace(/^\\w/, w => w.toUpperCase());\n</script>\n\n<div class=\"circle-pack\">\n  {#each descendants as d}\n    <div\n      class=\"circle-group\"\n      data-id=\"{d.data.id}\"\n      data-visible=\"{d.r > labelVisibilityThreshold}\"\n      style=\"left:{d.x}px;top:{d.y}px;\"\n    >\n      <div class=\"circle\"\n        style=\"width:{d.r * 2}px;height:{d.r * 2}px;background-color:{fill};border: 1px solid {stroke};\"\n      />\n      <div class=\"text-group\">\n        <div class=\"text\">{titleCase(d.data.id)}</div>\n        <div class=\"text value\" >{d.data.data[valueKey]}</div>\n      </div>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .circle-pack {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n  .circle-group,\n  .text-group {\n    position: absolute;\n  }\n  .circle-group {\n    transform: translate(-50%, -50%);\n  }\n  .circle-group[data-id=\"all\"] {\n    display: none;\n  }\n  .circle-group:hover {\n    z-index: 9999;\n  }\n  .circle-group[data-visible=\"false\"] .text-group {\n    display: none;\n    padding: 4px 7px;\n    background: #fff;\n    border: 1px solid #ccc;\n    transform: translate(-50%, -100%);\n    top: -4px;\n  }\n  .circle-group:hover .text-group {\n    display: block !important;\n  }\n  .text-group {\n    z-index: 9999;\n    width: auto;\n    top: 50%;\n    left: 50%;\n    text-align: center;\n    transform: translate(-50%, -50%);\n    white-space: nowrap;\n    pointer-events: none;\n    cursor: pointer;\n  }\n  .text {\n    color: #333;\n    width: 100%;\n    font-size: 13px;\n    /* text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff; */\n  }\n  .text.value{\n    font-size: 12px;\n    transform: translate(0, 1px)\n  }\n  .circle {\n    border-radius: 50%;\n    top: 0;\n    left: 0;\n  }\n  .circle:hover {\n    border-color: #000;\n  }\n</style>"}],"modules":[],"componentModules":[],"componentComponents":[],"csvs":[{"title":"./data/fruitGroups.csv","contents":"fruit,value\napples,3240\nbananas,1920\ncherries,1290\noranges,403\ndates,400\npears,230"}]}